require "yaml"

ENV['VAGRANT_EXPERIMENTAL'] = 'disks'
settings = YAML.load_file "settings.yaml"

HOME_DISK=settings["disks"]["home_disk"]

IP_SECTIONS = settings["network"]["devops_ip"].match(/^([0-9.]+\.)([^.]+)$/)

# First 3 octets including the trailing dot:
IP_NW = IP_SECTIONS.captures[0]

# Last octet excluding all dots:
IP_START = Integer(IP_SECTIONS.captures[1])

Vagrant.configure("2") do |config|
  config.vm.provision "shell", env: { "IP_NW" => IP_NW, "IP_START" => IP_START }, inline: <<-SHELL
      echo "$IP_NW$((IP_START)) devops01" >> /etc/hosts
  SHELL

  config.vm.box = settings["software"]["box"]
  config.vm.box_check_update = true
  config.vm.synced_folder ".", "/mnt/myshare", type: "virtualbox"
  config.vm.boot_timeout = 600
  config.vm.disk :disk, name: "home", size: "10GB"

  config.vm.define "devops" do |devops|
    devops.vm.hostname = "devops01"
    devops.vm.network "private_network", ip: settings["network"]["devops_ip"]
    #devops.disk :disk, size: "10GB", name: "extra_storage"
    

    devops.vm.provider "virtualbox" do |vb|
        vb.cpus = settings["nodes"]["devops"]["cpu"]
        vb.memory = settings["nodes"]["devops"]["memory"]
        vb.customize ['modifyvm', :id, '--vram', '128']
        vb.customize ["modifyvm", :id, "--clipboard-mode", "bidirectional"]
        vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
        vb.gui = true
        if settings["cluster_name"] and settings["cluster_name"] != ""
          vb.customize ["modifyvm", :id, "--groups", ("/" + settings["cluster_name"])]
        end
    end
    devops.vm.provision "shell", path: "scripts/docker.sh"
    devops.vm.provision "shell",
      env: {
        "DNS_SERVERS" => settings["network"]["dns_servers"].join(" ")
      },
      path: "scripts/common.sh"
      
    devops.vm.provision "shell", path: "scripts/visualcode.sh"
    devops.vm.provision "shell", path: "scripts/terraform.sh"
    devops.vm.provision "shell", path: "scripts/aws-cli.sh"

    # Restart
    devops.vm.provision "shell", inline: "sudo shutdown -r now"
  end
end

