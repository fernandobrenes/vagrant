require "yaml"
settings = YAML.load_file "settings.yaml"

ENV['VAGRANT_EXPERIMENTAL'] = 'disks'
settings = YAML.load_file(File.join(File.dirname(__FILE__), 'settings.yaml'))

DEVELOPMENT_DISK=settings["disks"]["dev_disk"]

IP_SECTIONS = settings["network"]["devops_ip"].match(/^([0-9.]+\.)([^.]+)$/)

VM_MASTER = settings["vms"]["master_vm"]

# First 3 octets including the trailing dot:
IP_NW = IP_SECTIONS.captures[0]

# Last octet excluding all dots:
IP_START = Integer(IP_SECTIONS.captures[1])

$msg = <<MSG
------------------------------------------------------
1. VM has the following share: /mnt/myshare
2. If installed, you can access Jenkins from your local machine: http://10.10.0.10:8080/
3. If installed, you can access Prometheus from your local machine: http://10.10.0.10:30900/
4. If installed, you can access Grafana from your local machine: http://10.10.0.10:30000/
------------------------------------------------------
MSG

Vagrant.configure("2") do |config|
  config.vm.post_up_message = $msg
  config.vm.provision "shell", env: { "IP_NW" => IP_NW, "IP_START" => IP_START }, inline: <<-SHELL
      echo "$IP_NW$((IP_START)) $VM_MASTER" >> /etc/hosts
  SHELL

  config.vm.box = settings["software"]["box"]
  config.vm.box_check_update = true
  config.vm.synced_folder ".", "/mnt/myshare", type: "virtualbox"
  config.vm.boot_timeout = 600
  config.vm.disk :disk, name: "development", size: "#{DEVELOPMENT_DISK}GB"

  config.vm.define VM_MASTER do |devops|
    devops.vm.hostname = VM_MASTER
    devops.vm.network "private_network", ip: settings["network"]["devops_ip"]

    devops.vm.provider "virtualbox" do |vb|
        vb.cpus = settings["nodes"]["devops"]["cpu"]
        vb.memory = settings["nodes"]["devops"]["memory"]
        vb.customize ['modifyvm', :id, '--vram', '128']
        vb.customize ["modifyvm", :id, "--clipboard-mode", "bidirectional"]
        vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
        vb.gui = true
        if settings["cluster_name"] and settings["cluster_name"] != ""
          vb.customize ["modifyvm", :id, "--groups", ("/" + settings["cluster_name"])]
        end
    end
    devops.vm.provision "shell", path: "scripts/development.sh"
    devops.vm.provision "shell",
      env: {
        "DNS_SERVERS" => settings["network"]["dns_servers"].join(" ")
      },
      path: "scripts/common.sh"

    devops.vm.provision "file", source: "settings.yaml", destination: "/tmp/settings.yaml"
    devops.vm.provision "shell", path: "scripts/visualcode.sh"
    devops.vm.provision "shell", path: "scripts/terraform.sh"
    devops.vm.provision "shell", path: "scripts/aws-cli.sh"
    devops.vm.provision "shell", path: "scripts/githubdesktop.sh"
    devops.vm.provision "shell", path: "scripts/docker.sh"
    devops.vm.provision "shell", inline: "echo 'Rebooting...'", reboot: true
    devops.vm.provision "shell", path: "scripts/tweaks.sh"
    devops.vm.provision "shell", path: "scripts/jenkins.sh", privileged: false #, run: "always"
    devops.vm.provision "shell", path: "scripts/kubernetes.sh", privileged: false #, run: "always"
    devops.vm.provision "shell", path: "scripts/prometheus-operator.sh", privileged: false 
    #--devops.vm.provision "shell", path: "scripts/grafana.sh", privileged: false
    devops.vm.provision "shell", path: "scripts/openlens.sh", privileged: false
    
    # Restart
    devops.vm.provision "shell", inline: "sudo shutdown -r now"
  end
end

